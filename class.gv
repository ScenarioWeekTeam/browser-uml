digraph g {
    fontname = "Bitstream Vera Sans"
    fontsize = 8

   node [
        fontname = "Bitstream Vera Sans"
        fontsize = 8
        shape = "record"
    ]

    edge [
        fontname = "Bitstream Vera Sans"
        fontsize = 8
    ]

    Tokeniser [
        label = "{Tokeniser|- input : String\l- pos : Int\l- Tokens : ArrayList\<String\>\l|+ Tokeniser(input : String)\l+ Tokens() : ArrayList\<String\>\l}"
    ]
    
    TreeConstructor [
        label = "{TreeConstructor|- input : ArrayList\<String\>\l- pos : Int\l|+ TreeConstructor(input : ArrayList\<String\>\l+ Tree() : Node\l}"
    ]

    DOM [
        label = "{DOM|- input : String\l- nodes : ArrayList\<Node\>\l- tokeniser : Tokeniser\l- treeConstructor : TreeConstructor\l|+ DOM(input : String)\l+ nodes() : ArrayList\<Node\>\l}"
    ]
    
    DOMNode [
        label = "{Node|- tag : String\l- attributes : HashMap\<String,String\>\l- children : ArrayList\<Node\>\l- data : String\l|+ Node(tag : String, attributes : HashMap\<String,String\>, children : ArrayList\<Node\>, data : String)\l+ getAttributes() : HashMap\<String,String\>\l+ setAttributes(attributes : HashMap\<String,String\>) : void\l+ getTag() : String\l+ setTag(tag : String) : void\l+ getData() : String\l+ setData(data : String) : void\l+ getChildren() : ArrayList\<Node\>\l+ setChildren(children : ArrayList\<Node\>) : void\l}"
    ]

    edge [
        arrowhead = "ediamond"
        
        headlabel = "1 "
        taillabel = "0..*"
    ]
    
    DOMNode -> DOM
    DOMNode -> DOMNode
    
    edge [
        arrowhead = "open"
        
        headlabel = "1 "
        taillabel = "1 "
    ]
    
    DOM -> Tokeniser
    DOM -> TreeConstructor
    TreeConstructor -> DOMNode

    StyleSheet [
        label = "{StyleSheet|- input : String\l- rules : ArrayList\<CSSRule\>\l- lexicalAnalyser : LexicalAnalyser\l- syntaxAnalyser : SyntaxAnalyser\l|+ StyleSheet(input : String)\l+ rules() : ArrayList\<CSSRule\>\l}"
    ]
    
    CSSRule [
        label = "{CSSRule|- selectors : ArrayList\<Selector\>\l- declarations : ArrayList\<Declarations\>\l- specificity : Int\l- cascadeOrder : Int\l|+ CSSRule(selectors : ArrayList\<Selector\>, declarations : ArrayList\<Declarations\>)\l+ getCascadeOrder() : Int\l+ getSpecificity() : Int\l}"
    ]
    
    Selector [
        label = "{Selector|- selector : String\l|+ Selector(selector : String)\l+ getSelector() : String}"
    ]
    
    Declaration [
        label = "{Declaration|- declaration : String\l|+ Declaration(declaration : String)\l+ getDeclaration() : String}"
    ]
    
    edge [
        arrowhead = "ediamond"
        
        headlabel = "1 "
        taillabel = "0..*"
    ]
    
    CSSRule -> StyleSheet
    
    edge [
        arrowhead = "ediamond"
        
        headlabel = "1 "
        taillabel = "1..*"
    ]
    
    Selector -> CSSRule
    Declaration -> CSSRule
    
    CSSLexicalAnalyser [
        label = "{CSSLexicalAnalyser|- input : ArrayList\<String\>\l- pos : Int\l- output : ArrayList\<CSSRule\>\l|+ CSSLexicalAnalyser(input : ArrayList\<String\>)\l+ output() : ArrayList\<CSSRule\>\l}"
    ]
    
    CSSSyntaxAnalyser [
        label = "{CSSSyntaxAnalyser|- input : String\l- pos : Int\l- tokens : ArrayList\<String\>\l|+ CSSSyntaxAnalyser(input : String)\l+ tokens() : ArrayList\<String\>\l}"
    ]
    
    edge [
        arrowhead = "open"
        
        headlabel = "1 "
        taillabel = "1 "
    ]
    
    StyleSheet -> CSSLexicalAnalyser
    StyleSheet -> CSSSyntaxAnalyser
    
    edge [
        arrowhead = "open"
        
        headlabel = "* "
        taillabel = "1 "
    ]
    
    CSSLexicalAnalyser -> CSSRule

    PersistentStorage [
        label = "{PersistentStorage|\l|+ PersistentStorage()\l+ clearStorage() : void\l}"
    ]
    
    LocalStorage [
        label = "{LocalStorage|- data : HashMap\<String, String\>\l|+ LocalStorage()\l+ addData(key : String, value : String) : Boolean\l+ removeData(key : String) : Boolean\l+ readData(key : String) : String\l}"
    ]
    
    IndexedDB [
        label = "{IndexedDB|- version : String\l|+ IndexedDB()\l+ getVersion() : String\l+ setVersion(version : String) : void\l+ transaction(objectStore : String, mode : String, key : String, action : String) : Boolean\l}"
    ]
    
    WebSQL [
        label = "{WebSQL|\l|+ WebSQL()\l+ executeCommand(command : String) : void\l}"
    ]
    
    FileSystem [
        label = "{FileSystem|\l|+ FileSystem()\l+ readFile(fileAddress : String) : File\l}"
    ]
    
    File [
        label = "{File|- name : String\l- dateModified : Date\l|+ File(fileAddress : String)\l+ readData() : String\l+ getName() : String\l+ getDateModified() : Date\l}"
    ]
    
    CookieStorage [
        label = "{CookieStorage|- cookies : ArrayList\<Cookie\>\l|+ CookieStorage()\l+ createCookie(name : String, value : String, attributes : HashMap\<String, String\>) : Cookie\l+ findCookie(name : String) : Cookie\l}"
    ]
    
    edge [
        arrowhead = "ediamond"
        
        headlabel = "1 "
        taillabel = "0..*"
    ]
    
    LocalStorage -> PersistentStorage
    IndexedDB -> PersistentStorage
    WebSQL -> PersistentStorage
    FileSystem -> PersistentStorage
    CookieStorage -> PersistentStorage
    File -> FileStorage

    Browser [
        label = "{Browser|- Storage : PersistentStorage\l- interface : UserInterface\l|+ Browser()\l}"
    ]
    
    UserInterface [
        label = "{UserInterface|\l|+ UserInterface()\l- newWindow() : Tab\lcloseWindow(window : Tab) : void\l}"
    ]
    
    Tab [
        label = "{Tab|- address : String\l- back : Stack\<String\>\l- forwards : Stack\<String\>\l|+ Tab()\l+ navigate(url : String) : void\l+ back() : void\l+ forwards() : void\l+ refresh() : void\l+stopRefresh() : void\l}"
    ]
    
    edge [
        arrowhead = "ediamond"
        
        headlabel = "1 "
        taillabel = "0..*"
    ]
    
    Tab -> Browser
    
    edge [
        arrowhead = "open"
        
        headlabel = "1 "
        taillabel = "1 "
    ]
    
    HTTPClient [
        label = "{HTTPClient|- connection : URLConnection\l|+ HTTPClient()\l+ httpRequest(method : String, cookies : ArrayList\<Cookie\>, headers : HashMap\<String, String\>, Data : DataOutputStream) : HTTPObject\l}"
    ]
    
    HTTPObject [
        label = "{HTTPObject|- cookies: ArrayList\<Cookie\>\l- headers : HashMap\<String, String\>\l- Data : DataInputStream\l|+ HTTPObject(cookies : ArrayList\<Cookie\>, headers : HashMap\<String, String\>, Data : DataInputStream)\l+ getCookies() : ArrayList\<Cookie\>\l+ getHeaders() : HashMap\<String, String\>\l getData() : DataInputStream\l}"
    ]
    
    edge [
        arrowhead = "ediamond"
        
        headlabel = "1 "
        taillabel = "0..*"
    ]
    
    HTTPClient -> Tab
    HTTPObject -> Tab
    
    edge [
        arrowhead = "open"
        
        headlabel = "* "
        taillabel = "1 "
    ]
    
    HTTPClient -> HTTPObject
    JSExecutionEngine -> File
    
    edge [
        arrowhead = "open"
        
        headlabel = "1 "
        taillabel = "1 "
    ]
    
    HTTPObject -> CookieStorage
    JSExecutionEngine -> LocalStorage
    JSExecutionEngine -> WebSQL
    JSExecutionEngine -> IndexedDB
    JSExecutionEngine -> CookieStorage
    
    edge [
        arrowhead = "ediamond"
        
        headlabel = "1 "
        taillabel = "1 "
    ]
    
    DOM -> Tab
    PersistentStorage -> Browser
    
    edge [
        arrowhead = "ediamond"
        
        headlabel = "1 "
        taillabel = "0..* "
    ]
    
    StyleSheet -> Tab
    
    ViewPort [
        label = "{ViewPort|- node : Node\l- style : Style\l- height : Int\l- width : Int\l- dirtyBit : Boolean\l|+ ViewPort(node : Node, style : Style)\l+ dirty() : void\l+ height() : Int\l width() : Int\l}"
    ]
    
    Render [
        label = "{Render|- node : Node\l- style : Style\l- containingLayer : Int\l- height : Int\l- width : Int\l- dirtyBit : Boolean\l|+ Render(node : Node, style : Style, layer: Int)\l+ dirty() : void\l+ height() : Int\l width() : Int\l+ layer() : Int\l}"
    ]
    
    Style [
        label = "{Style|- declarations : ArrayList\<Declaration\>\l|+ Style(declarations : ArrayList\<Declaration\>)\l+ getStyle() : ArrayList\<Declaration\>}"
    ]
    
    RenderingEngine [
        label = "{RenderingEngine|- stylesheets : ArrayList\<Stylesheet\>\l- document : DOM\l- classes : HashMap\<String, CSSRule\>\l- ids : HashMap\<String, CSSRule\>\l- tags : HashMap\<String, CSSRule\>\l|+ RenderingEngine(Document : DOM, styles : ArrayList\<StyleSheet\>)\l+ layout() : void\l+ paint() : void\l+ update() : void\l}"
    ]
    
    CSSRuleTree [
        label = "{CSSRuleTree|- selectors : ArrayList\<Selector\>\l- declarations : ArrayList\<Declaration\>\l|+ CSSRuleTree(selectors : ArrayList\<Selector\>\linput : ArrayList\<StyleSheet\>)\l+ findRules(selectors : ArrayList\<Selectors\>) : CSSRuleTree\l+ getRules() : ArrayList\<Declarations\>\l}"
    ]
    
    edge [
        arrowhead = "ediamond"
        
        headlabel = "1 "
        taillabel = "1 "
    ]
    
    RenderingEngine -> Tab
    ViewPort -> RenderingEngine
    Style -> ViewPort
    DOMNode -> ViewPort
    Style -> Render
    CSSRuleTree -> RenderingEngine
    
    edge [
        arrowhead = "ediamond"
        
        headlabel = "1 "
        taillabel = "0..* "
    ]
    
    Cookie -> CookieStorage
    Render -> ViewPort
    Render -> Render
    CSSRuleTree -> CSSRuleTree
    
    Widget [
        label = "{Widget|- type : String\l- position : Tuple\<Int,Int,Int\>\l- rotation : Int\l|+ Widget(type : String, position : Tuple\<Int,Int,Int\>, rotation : Int)\l+ setPosition(position : Tuple\<Int,Int,Int\>) : void\l+ setRotation(rotation : Int) : void\l+ paint() : void\l}"
    ]
    
    edge [
        arrowhead = "ediamond"
        
        headlabel = "1 "
        taillabel = "0..1 "
    ]
    
    Widget -> Render
    
    JSSyntaxAnalyser [
        label = "{JSSyntaxAnalyser|\l|\l}"
    ]
    
    JSLexicalAnalyser [
        label = "{JSLexicalAnalyser|\l|\l}"
    ]
    
    JSSemanticAnalyser [
        label = "{JSSemanticAnalyser|\l|\l}"
    ]
    
    JSOptimiser [
        label = "{JSOptimiser|\l|\l}"
    ]
    
    JSCompiler [
        label = "{JSCompiler|\l|\l}"
    ]
    
    JSExecutionEngine [
        label = "{JSExecutionEngine|\l|\l}"
    ]
    
    edge [
        arrowhead = "open"
        
        headlabel = "1 "
        taillabel = "1 "
    ]
    
    JSCompiler -> JSOptimiser
    JSCompiler -> JSSemanticAnalyser
    JSCompiler -> JSLexicalAnalyser
    JSCompiler -> JSSyntaxAnalyser
    JSExecutionEngine -> JSCompiler
    Tab -> JSExecutionEngine
    JSExecutionEngine -> RenderingEngine
    
    edge [
        arrowhead = "open"
        
        headlabel = "1..* "
        taillabel = "1 "
    ]
    
    JSExecutionEngine -> StyleSheet
    
    edge [
        arrowhead = "none"
        
        headlabel = "1 "
        taillabel = "1 "
    ]
    
    DOM -> JSExecutionEngine
    UserInterface -> Browser
    
    edge [
        arrowhead = "none"
        
        headlabel = "0..1 "
        taillabel = "1 "
    ]
    
    DOMNode -> Render
    
    edge [
        arrowhead = "open"
        
        headlabel = "0..* "
        taillabel = "1 "
    ]
    
    HTTPObject -> Cookie
    JSExecutionEngine -> Cookie
    UserInterface -> Tab
    
    Cookie [
        label = "{Cookie|- name : String\l- value : String\l- attributes : HashMap\<String, String\>\l- expiry : Date\l|+ getName() : String\l+ getValue() : String\l+ getAttributes() : HashMap\<String, String\>\l+ destroy() : void\l}"
    ]
}
